# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: rules_message.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x13rules_message.proto\x12\x08waf_deny\"\x96\x01\n\x04Rule\x12\n\n\x02id\x18\x01 \x01(\x04\x12\x0f\n\x07payload\x18\x02 \x01(\t\x12\x12\n\nmatch_type\x18\x03 \x01(\t\x12\x0e\n\x06\x61\x63tion\x18\x04 \x01(\t\x12\x14\n\x0cplaceholders\x18\x05 \x03(\t\x12\x17\n\x0ftransformations\x18\x06 \x03(\t\x12\x0c\n\x04tags\x18\x07 \x03(\t\x12\x10\n\x08\x66ilename\x18\x08 \x01(\t\"Z\n\x08Metadata\x12\x10\n\x08\x66ilename\x18\x01 \x01(\t\x12\x14\n\x07version\x18\x03 \x01(\tH\x00\x88\x01\x01\x12\x11\n\x04kind\x18\x04 \x01(\tH\x01\x88\x01\x01\x42\n\n\x08_versionB\x07\n\x05_kind\"*\n\x08RuleData\x12\x10\n\x08\x66ilename\x18\x01 \x01(\t\x12\x0c\n\x04\x64\x61ta\x18\x02 \x01(\t\"\x81\x01\n\x0cRulesMessage\x12$\n\x08metadata\x18\x01 \x03(\x0b\x32\x12.waf_deny.Metadata\x12$\n\x0cstatic_rules\x18\x02 \x03(\x0b\x32\x0e.waf_deny.Rule\x12%\n\trule_data\x18\x03 \x03(\x0b\x32\x12.waf_deny.RuleDatab\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'rules_message_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _globals['_RULE']._serialized_start=34
  _globals['_RULE']._serialized_end=184
  _globals['_METADATA']._serialized_start=186
  _globals['_METADATA']._serialized_end=276
  _globals['_RULEDATA']._serialized_start=278
  _globals['_RULEDATA']._serialized_end=320
  _globals['_RULESMESSAGE']._serialized_start=323
  _globals['_RULESMESSAGE']._serialized_end=452
# @@protoc_insertion_point(module_scope)
